name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests and track metrics
      run: |
        # Start MLflow run
        python -c "
        import mlflow
        import time
        import os
        
        with mlflow.start_run(run_name='CI_Test_Run'):
            # Log git info
            mlflow.log_param('commit_sha', os.environ.get('GITHUB_SHA'))
            mlflow.log_param('branch', os.environ.get('GITHUB_REF'))
            
            # Track test execution time
            start_time = time.time()
            os.system('pytest --html=reports/report.html --self-contained-html')
            execution_time = time.time() - start_time
            
            # Log metrics
            mlflow.log_metric('test_execution_time', execution_time)
            
            # Track OpenAI API costs (approximate)
            with open('api_cost_tracking.txt', 'r') as f:
                api_costs = float(f.read() or 0)
            mlflow.log_metric('openai_api_cost', api_costs)
        "
        
    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          reports/
          mlruns/
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Deploy and track metrics
      run: |
        python -c "
        import mlflow
        import time
        
        with mlflow.start_run(run_name='CI_Deploy_Run'):
            # Log deployment metrics
            start_time = time.time()
            os.system('echo \"Deploying to production...\"')
            deployment_time = time.time() - start_time
            
            mlflow.log_metric('deployment_time', deployment_time)
            mlflow.log_param('environment', 'production')
        "
        
    - name: Notify on success
      if: success()
      run: |
        echo "Deployment successful!"
        python -c "
        import mlflow
        mlflow.log_metric('deployment_status', 1)
        "
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "Deployment failed!"
        python -c "
        import mlflow
        mlflow.log_metric('deployment_status', 0)
        " 